{
    "uuid": "1d0dae01-2fe3-5971-86b2-965007cceb0c",
    "title": "SyntaxSQLNet: Syntax Tree Networks for Complex and Cross-DomainText-to-SQL Task",
    "conference": "arxiv",
    "conference_full": "ArXiv",
    "volume": null,
    "year": 2018,
    "authors": [
        "Tao Yu",
        "Michihiro Yasunaga",
        "Kai Yang",
        "Rui Zhang",
        "Dongxu Wang",
        "Zifan Li",
        "Dragomir Radev"
    ],
    "pdf_url": "http://arxiv.org/pdf/1810.05237v2",
    "pdf_path": "data\\dataset\\m3sciqa\\papers\\arxiv2018\\1d0dae01-2fe3-5971-86b2-965007cceb0c.pdf",
    "bibtex": "@misc{yu2018syntaxsqlnetsyntaxtreenetworksfor,\n    title = {SyntaxSQLNet: Syntax Tree Networks for Complex and Cross-DomainText-to-SQL Task},\n    author = {Tao Yu and Michihiro Yasunaga and Kai Yang and Rui Zhang and Dongxu Wang and Zifan Li and Dragomir Radev},\n    year = {2018},\n    eprint = {1810.05237},\n    archivePrefix = {arXiv},\n    primaryClass = {cs.CL},\n    url = {http://arxiv.org/abs/1810.05237},\n}",
    "abstract": "Most existing studies in text-to-SQL tasks do not require generating complex\nSQL queries with multiple clauses or sub-queries, and generalizing to new,\nunseen databases. In this paper we propose SyntaxSQLNet, a syntax tree network\nto address the complex and cross-domain text-to-SQL generation task.\nSyntaxSQLNet employs a SQL specific syntax tree-based decoder with SQL\ngeneration path history and table-aware column attention encoders. We evaluate\nSyntaxSQLNet on the Spider text-to-SQL task, which contains databases with\nmultiple tables and complex SQL queries with multiple SQL clauses and nested\nqueries. We use a database split setting where databases in the test set are\nunseen during training. Experimental results show that SyntaxSQLNet can handle\na significantly greater number of complex SQL examples than prior work,\noutperforming the previous state-of-the-art model by 7.3% in exact matching\naccuracy. We also show that SyntaxSQLNet can further improve the performance by\nan additional 7.5% using a cross-domain augmentation method, resulting in a\n14.8% improvement in total. To our knowledge, we are the first to study this\ncomplex and cross-domain text-to-SQL task.",
    "num_pages": 11
}