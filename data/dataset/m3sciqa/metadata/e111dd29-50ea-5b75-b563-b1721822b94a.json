{
    "uuid": "e111dd29-50ea-5b75-b563-b1721822b94a",
    "title": "Data-Copilot: Bridging Billions of Data and Humans with Autonomous Workflow",
    "conference": "arxiv",
    "conference_full": "ArXiv",
    "volume": null,
    "year": 2024,
    "authors": [
        "Wenqi Zhang",
        "Yongliang Shen",
        "Weiming Lu",
        "Yueting Zhuang"
    ],
    "pdf_url": "http://arxiv.org/pdf/2306.07209v7",
    "pdf_path": "data\\dataset\\m3sciqa\\papers\\arxiv2024\\e111dd29-50ea-5b75-b563-b1721822b94a.pdf",
    "bibtex": "@misc{zhang2024datacopilotbridgingbillionsofdata,\n    title = {Data-Copilot: Bridging Billions of Data and Humans with Autonomous Workflow},\n    author = {Wenqi Zhang and Yongliang Shen and Weiming Lu and Yueting Zhuang},\n    year = {2024},\n    eprint = {2306.07209},\n    archivePrefix = {arXiv},\n    primaryClass = {cs.CL},\n    url = {http://arxiv.org/abs/2306.07209},\n}",
    "abstract": "Industries such as finance, meteorology, and energy generate vast amounts of\ndata daily. Efficiently managing, processing, and displaying this data requires\nspecialized expertise and is often tedious and repetitive. Leveraging large\nlanguage models (LLMs) to develop an automated workflow presents a highly\npromising solution. However, LLMs are not adept at handling complex numerical\ncomputations and table manipulations and are also constrained by a limited\ncontext budget. Based on this, we propose Data-Copilot, a data analysis agent\nthat autonomously performs querying, processing, and visualization of massive\ndata tailored to diverse human requests. The advancements are twofold: First,\nit is a code-centric agent that receives human requests and generates code as\nan intermediary to handle massive data, which is quite flexible for large-scale\ndata processing tasks. Second, Data-Copilot involves a data exploration phase\nin advance, which explores how to design more universal and error-free\ninterfaces for real-time response. Specifically, it actively explores data\nsources, discovers numerous common requests, and abstracts them into many\nuniversal interfaces for daily invocation. When deployed in real-time requests,\nData-Copilot only needs to invoke these pre-designed interfaces, transforming\nraw data into visualized outputs (e.g., charts, tables) that best match the\nuser's intent. Compared to generating code from scratch, invoking these\npre-designed and compiler-validated interfaces can significantly reduce errors\nduring real-time requests. Additionally, interface workflows are more efficient\nand offer greater interpretability than code. We open-sourced Data-Copilot with\nmassive Chinese financial data, such as stocks, funds, and news, demonstrating\npromising application prospects.",
    "num_pages": 33
}