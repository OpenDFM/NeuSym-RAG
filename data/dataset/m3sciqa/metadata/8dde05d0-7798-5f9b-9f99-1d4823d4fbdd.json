{
    "uuid": "8dde05d0-7798-5f9b-9f99-1d4823d4fbdd",
    "title": "Self-Consistency Improves Chain of Thought Reasoning in Language Models",
    "conference": "arxiv",
    "conference_full": "ArXiv",
    "volume": null,
    "year": 2023,
    "authors": [
        "Xuezhi Wang",
        "Jason Wei",
        "Dale Schuurmans",
        "Quoc Le",
        "Ed Chi",
        "Sharan Narang",
        "Aakanksha Chowdhery",
        "Denny Zhou"
    ],
    "pdf_url": "http://arxiv.org/pdf/2203.11171v4",
    "pdf_path": "data\\dataset\\m3sciqa\\papers\\arxiv2023\\8dde05d0-7798-5f9b-9f99-1d4823d4fbdd.pdf",
    "bibtex": "@misc{wang2023selfconsistencyimproveschainofthought,\n    title = {Self-Consistency Improves Chain of Thought Reasoning in Language Models},\n    author = {Xuezhi Wang and Jason Wei and Dale Schuurmans and Quoc Le and Ed Chi and Sharan Narang and Aakanksha Chowdhery and Denny Zhou},\n    year = {2023},\n    eprint = {2203.11171},\n    archivePrefix = {arXiv},\n    primaryClass = {cs.CL},\n    url = {http://arxiv.org/abs/2203.11171},\n}",
    "abstract": "Chain-of-thought prompting combined with pre-trained large language models\nhas achieved encouraging results on complex reasoning tasks. In this paper, we\npropose a new decoding strategy, self-consistency, to replace the naive greedy\ndecoding used in chain-of-thought prompting. It first samples a diverse set of\nreasoning paths instead of only taking the greedy one, and then selects the\nmost consistent answer by marginalizing out the sampled reasoning paths.\nSelf-consistency leverages the intuition that a complex reasoning problem\ntypically admits multiple different ways of thinking leading to its unique\ncorrect answer. Our extensive empirical evaluation shows that self-consistency\nboosts the performance of chain-of-thought prompting with a striking margin on\na range of popular arithmetic and commonsense reasoning benchmarks, including\nGSM8K (+17.9%), SVAMP (+11.0%), AQuA (+12.2%), StrategyQA (+6.4%) and\nARC-challenge (+3.9%).",
    "num_pages": 24
}