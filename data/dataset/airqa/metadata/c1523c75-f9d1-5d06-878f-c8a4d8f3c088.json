{
    "uuid": "c1523c75-f9d1-5d06-878f-c8a4d8f3c088",
    "title": "Aligning Offline Metrics and Human Judgments of Value for Code Generation Models",
    "conference_full": "Annual Meeting of the Association for Computational Linguistics",
    "conference": "ACL",
    "year": 2023,
    "volume": "Findings of the Association for Computational Linguistics: ACL 2023",
    "bibtex": "@inproceedings{dibia-etal-2023-aligning,\n    title = \"Aligning Offline Metrics and Human Judgments of Value for Code Generation Models\",\n    author = \"Dibia, Victor  and\n      Fourney, Adam  and\n      Bansal, Gagan  and\n      Poursabzi-Sangdeh, Forough  and\n      Liu, Han  and\n      Amershi, Saleema\",\n    editor = \"Rogers, Anna  and\n      Boyd-Graber, Jordan  and\n      Okazaki, Naoaki\",\n    booktitle = \"Findings of the Association for Computational Linguistics: ACL 2023\",\n    month = jul,\n    year = \"2023\",\n    address = \"Toronto, Canada\",\n    publisher = \"Association for Computational Linguistics\",\n    url = \"https://aclanthology.org/2023.findings-acl.540\",\n    doi = \"10.18653/v1/2023.findings-acl.540\",\n    pages = \"8516--8528\",\n    abstract = \"Large language models have demonstrated great potential to assist programmers in generating code. For such human-AI pair programming scenarios, we empirically demonstrate that while generated code are most often evaluated in terms of their functional correctness (i.e., whether generations pass available unit tests), correctness does not fully capture (e.g., may underestimate) the productivity gains these models may provide. Through a user study with N=49 experienced programmers, we show that while correctness captures high-value generations, programmers still rate code that fails unit tests as valuable if it reduces the overall effort needed to complete a coding task. Finally, we propose a hybrid metric that combines functional correctness and syntactic similarity and show that it achieves a 14{\\%} stronger correlation with value and can therefore better represent real-world gains when evaluating and comparing models.\",\n}\n",
    "authors": [
        "Victor Dibia",
        "Adam Fourney",
        "Gagan Bansal",
        "Forough Poursabzi-Sangdeh",
        "Han Liu",
        "Saleema Amershi"
    ],
    "pdf_url": "https://aclanthology.org/2023.findings-acl.540.pdf",
    "pdf_path": "data/dataset/airqa/papers/acl2023/c1523c75-f9d1-5d06-878f-c8a4d8f3c088.pdf",
    "abstract": "Large language models have demonstrated great potential to assist programmers in generating code. For such human-AI pair programming scenarios, we empirically demonstrate that while generated code are most often evaluated in terms of their functional correctness (i.e., whether generations pass available unit tests), correctness does not fully capture (e.g., may underestimate) the productivity gains these models may provide. Through a user study with N=49 experienced programmers, we show that while correctness captures high-value generations, programmers still rate code that fails unit tests as valuable if it reduces the overall effort needed to complete a coding task. Finally, we propose a hybrid metric that combines functional correctness and syntactic similarity and show that it achieves a 14% stronger correlation with value and can therefore better represent real-world gains when evaluating and comparing models.",
    "num_pages": 13
}