{
    "uuid": "40a97df5-09a4-54f1-911e-f53f4d15a46f",
    "title": "Enhancing Text-to-SQL Parsing through Question Rewriting and Execution-Guided Refinement",
    "conference_full": "Annual Meeting of the Association for Computational Linguistics",
    "conference": "ACL",
    "year": 2024,
    "volume": "Findings of the Association for Computational Linguistics: ACL 2024",
    "bibtex": "@inproceedings{mao-etal-2024-enhancing,\n    title = \"Enhancing Text-to-{SQL} Parsing through Question Rewriting and Execution-Guided Refinement\",\n    author = \"Mao, Wenxin  and\n      Wang, Ruiqi  and\n      Guo, Jiyu  and\n      Zeng, Jichuan  and\n      Gao, Cuiyun  and\n      Han, Peiyi  and\n      Liu, Chuanyi\",\n    editor = \"Ku, Lun-Wei  and\n      Martins, Andre  and\n      Srikumar, Vivek\",\n    booktitle = \"Findings of the Association for Computational Linguistics: ACL 2024\",\n    month = aug,\n    year = \"2024\",\n    address = \"Bangkok, Thailand\",\n    publisher = \"Association for Computational Linguistics\",\n    url = \"https://aclanthology.org/2024.findings-acl.120\",\n    doi = \"10.18653/v1/2024.findings-acl.120\",\n    pages = \"2009--2024\",\n    abstract = \"Large Language Model (LLM)-based approach has become the mainstream for Text-to-SQL task and achieves remarkable performance. In this paper, we augment the existing prompt engineering methods by exploiting the database content and execution feedback. Specifically, we introduce DART-SQL, which comprises two key components: (1) Question Rewriting: DART-SQL rewrites natural language questions by leveraging database content information to eliminate ambiguity. (2) Execution-Guided Refinement: DART-SQL incorporates database content information and utilizes the execution results of the generated SQL to iteratively refine the SQL. We apply this framework to the two LLM-based approaches (DAIL-SQL and C3) and test it on four widely used benchmarks (Spider-dev, Spider-test, Realistic and DK). Experiments show that our framework for DAIL-SQL and C3 achieves an average improvement of 12.41{\\%} and 5.38{\\%}, respectively, in terms of execution accuracy(EX) metric.\",\n}\n",
    "authors": [
        "Wenxin Mao",
        "Ruiqi Wang",
        "Jiyu Guo",
        "Jichuan Zeng",
        "Cuiyun Gao",
        "Peiyi Han",
        "Chuanyi Liu"
    ],
    "pdf_url": "https://aclanthology.org/2024.findings-acl.120.pdf",
    "pdf_path": "data/dataset/airqa/papers/acl2024/40a97df5-09a4-54f1-911e-f53f4d15a46f.pdf",
    "abstract": "Large Language Model (LLM)-based approach has become the mainstream for Text-to-SQL task and achieves remarkable performance. In this paper, we augment the existing prompt engineering methods by exploiting the database content and execution feedback. Specifically, we introduce DART-SQL, which comprises two key components: (1) Question Rewriting: DART-SQL rewrites natural language questions by leveraging database content information to eliminate ambiguity. (2) Execution-Guided Refinement: DART-SQL incorporates database content information and utilizes the execution results of the generated SQL to iteratively refine the SQL. We apply this framework to the two LLM-based approaches (DAIL-SQL and C3) and test it on four widely used benchmarks (Spider-dev, Spider-test, Realistic and DK). Experiments show that our framework for DAIL-SQL and C3 achieves an average improvement of 12.41% and 5.38%, respectively, in terms of execution accuracy(EX) metric.",
    "num_pages": 16
}