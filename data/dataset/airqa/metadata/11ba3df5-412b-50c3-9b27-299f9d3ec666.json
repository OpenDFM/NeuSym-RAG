{
    "uuid": "11ba3df5-412b-50c3-9b27-299f9d3ec666",
    "title": "A Simple, Yet Effective Approach to Finding Biases in Code Generation",
    "conference_full": "Annual Meeting of the Association for Computational Linguistics",
    "conference": "ACL",
    "year": 2023,
    "volume": "Findings of the Association for Computational Linguistics: ACL 2023",
    "bibtex": "@inproceedings{mouselinos-etal-2023-simple,\n    title = \"A Simple, Yet Effective Approach to Finding Biases in Code Generation\",\n    author = \"Mouselinos, Spyridon  and\n      Malinowski, Mateusz  and\n      Michalewski, Henryk\",\n    editor = \"Rogers, Anna  and\n      Boyd-Graber, Jordan  and\n      Okazaki, Naoaki\",\n    booktitle = \"Findings of the Association for Computational Linguistics: ACL 2023\",\n    month = jul,\n    year = \"2023\",\n    address = \"Toronto, Canada\",\n    publisher = \"Association for Computational Linguistics\",\n    url = \"https://aclanthology.org/2023.findings-acl.718\",\n    doi = \"10.18653/v1/2023.findings-acl.718\",\n    pages = \"11299--11329\",\n    abstract = \"Recently, high-performing code generation systems based on large language models have surfaced. They are trained on massive corpora containing much more natural text than actual executable computer code. This work shows that current code generation systems exhibit undesired biases inherited from their large language model backbones, which can reduce the quality of the generated code under specific circumstances. To investigate the effect, we propose the {``}block of influence{''} concept, which enables a modular decomposition and analysis of the coding challenges. We introduce an automated intervention mechanism reminiscent of adversarial testing that exposes undesired biases through the failure modes of the models under test. Finally, we demonstrate how our framework can be used as a data transformation technique during fine-tuning, acting as a mitigation strategy for these biases.\",\n}\n",
    "authors": [
        "Spyridon Mouselinos",
        "Mateusz Malinowski",
        "Henryk Michalewski"
    ],
    "pdf_url": "https://aclanthology.org/2023.findings-acl.718.pdf",
    "pdf_path": "data/dataset/airqa/papers/acl2023/11ba3df5-412b-50c3-9b27-299f9d3ec666.pdf",
    "abstract": "Recently, high-performing code generation systems based on large language models have surfaced. They are trained on massive corpora containing much more natural text than actual executable computer code. This work shows that current code generation systems exhibit undesired biases inherited from their large language model backbones, which can reduce the quality of the generated code under specific circumstances. To investigate the effect, we propose the “block of influence” concept, which enables a modular decomposition and analysis of the coding challenges. We introduce an automated intervention mechanism reminiscent of adversarial testing that exposes undesired biases through the failure modes of the models under test. Finally, we demonstrate how our framework can be used as a data transformation technique during fine-tuning, acting as a mitigation strategy for these biases.",
    "num_pages": 31
}