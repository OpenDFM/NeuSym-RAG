{
    "uuid": "0553ab7e-3378-5d65-8940-fd02e17e2bed",
    "title": "VisKoP: Visual Knowledge oriented Programming for Interactive Knowledge Base Question Answering",
    "conference_full": "Annual Meeting of the Association for Computational Linguistics",
    "conference": "ACL",
    "year": 2023,
    "volume": "Proceedings of the 61st Annual Meeting of the Association for Computational Linguistics (Volume 3: System Demonstrations)",
    "bibtex": "@inproceedings{yao-etal-2023-viskop,\n    title = \"{V}is{K}o{P}: Visual Knowledge oriented Programming for Interactive Knowledge Base Question Answering\",\n    author = \"Yao, Zijun  and\n      Chen, Yuanyong  and\n      Lv, Xin  and\n      Cao, Shulin  and\n      Xin, Amy  and\n      Yu, Jifan  and\n      Jin, Hailong  and\n      Xu, Jianjun  and\n      Zhang, Peng  and\n      Hou, Lei  and\n      Li, Juanzi\",\n    editor = \"Bollegala, Danushka  and\n      Huang, Ruihong  and\n      Ritter, Alan\",\n    booktitle = \"Proceedings of the 61st Annual Meeting of the Association for Computational Linguistics (Volume 3: System Demonstrations)\",\n    month = jul,\n    year = \"2023\",\n    address = \"Toronto, Canada\",\n    publisher = \"Association for Computational Linguistics\",\n    url = \"https://aclanthology.org/2023.acl-demo.17\",\n    doi = \"10.18653/v1/2023.acl-demo.17\",\n    pages = \"179--189\",\n    abstract = \"We present Visual Knowledge oriented Programming platform (\\textbf{VisKoP}), a knowledge base question answering (KBQA) system that integrates human into the loop to edit and debug the knowledge base (KB) queries. VisKoP not only provides a neural program induction module, which converts natural language questions into knowledge oriented program language (KoPL), but also maps KoPL programs into graphical elements. KoPL programs can be edited with simple graphical operators, such as \\textit{{''}dragging{''}} to add knowledge operators and \\textit{{''}slot filling{''}} to designate operator arguments. Moreover, VisKoP provides auto-completion for its knowledge base schema and users can easily debug the KoPL program by checking its intermediate results. To facilitate the practical KBQA on a million-entity-level KB, we design a highly efficient KoPL execution engine for the back-end. Experiment results show that VisKoP is highly efficient and user interaction can fix a large portion of wrong KoPL programs to acquire the correct answer. The VisKoP online demo, highly efficient KoPL engine, and screencast video are now publicly available.\",\n}\n",
    "authors": [
        "Zijun Yao",
        "Yuanyong Chen",
        "Xin Lv",
        "Shulin Cao",
        "Amy Xin",
        "Jifan Yu",
        "Hailong Jin",
        "Jianjun Xu",
        "Peng Zhang",
        "Lei Hou",
        "Juanzi Li"
    ],
    "pdf_url": "https://aclanthology.org/2023.acl-demo.17.pdf",
    "pdf_path": "data/dataset/airqa/papers/acl2023/0553ab7e-3378-5d65-8940-fd02e17e2bed.pdf",
    "abstract": "We present Visual Knowledge oriented Programming platform (VisKoP), a knowledge base question answering (KBQA) system that integrates human into the loop to edit and debug the knowledge base (KB) queries. VisKoP not only provides a neural program induction module, which converts natural language questions into knowledge oriented program language (KoPL), but also maps KoPL programs into graphical elements. KoPL programs can be edited with simple graphical operators, such as ”dragging” to add knowledge operators and ”slot filling” to designate operator arguments. Moreover, VisKoP provides auto-completion for its knowledge base schema and users can easily debug the KoPL program by checking its intermediate results. To facilitate the practical KBQA on a million-entity-level KB, we design a highly efficient KoPL execution engine for the back-end. Experiment results show that VisKoP is highly efficient and user interaction can fix a large portion of wrong KoPL programs to acquire the correct answer. The VisKoP online demo, highly efficient KoPL engine, and screencast video are now publicly available.",
    "num_pages": 11
}