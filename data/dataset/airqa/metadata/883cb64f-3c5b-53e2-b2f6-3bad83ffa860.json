{
    "uuid": "883cb64f-3c5b-53e2-b2f6-3bad83ffa860",
    "title": "Respond in my Language: Mitigating Language Inconsistency in Response Generation based on Large Language Models",
    "conference_full": "Annual Meeting of the Association for Computational Linguistics",
    "conference": "ACL",
    "year": 2024,
    "volume": "Proceedings of the 62nd Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers)",
    "bibtex": "@inproceedings{zhang-etal-2024-respond,\n    title = \"Respond in my Language: Mitigating Language Inconsistency in Response Generation based on Large Language Models\",\n    author = \"Zhang, Liang  and\n      Jin, Qin  and\n      Huang, Haoyang  and\n      Zhang, Dongdong  and\n      Wei, Furu\",\n    editor = \"Ku, Lun-Wei  and\n      Martins, Andre  and\n      Srikumar, Vivek\",\n    booktitle = \"Proceedings of the 62nd Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers)\",\n    month = aug,\n    year = \"2024\",\n    address = \"Bangkok, Thailand\",\n    publisher = \"Association for Computational Linguistics\",\n    url = \"https://aclanthology.org/2024.acl-long.229\",\n    doi = \"10.18653/v1/2024.acl-long.229\",\n    pages = \"4177--4192\",\n    abstract = \"Large Language Models (LLMs) show strong instruction understanding ability across multiple languages. However, they are easily biased towards English in instruction tuning, and generate English responses even given non-English instructions. In this paper, we investigate the language inconsistent generation problem in monolingual instruction tuning. We find that instruction tuning in English increases the models{'} preference for English responses. It attaches higher probabilities to English responses than to responses in the same language as the instruction. Based on the findings, we alleviate the language inconsistent generation problem by counteracting the model preference for English responses in both the training and inference stages. Specifically, we propose Pseudo-Inconsistent Penalization (PIP) which prevents the model from generating English responses when given non-English language prompts during training, and Prior Enhanced Decoding (PED) which improves the language-consistent prior by leveraging the untuned base language model. Experimental results show that our two methods significantly improve the language consistency of the model without requiring any multilingual data. Our code, data, and models will be released.\",\n}\n",
    "authors": [
        "Liang Zhang",
        "Qin Jin",
        "Haoyang Huang",
        "Dongdong Zhang",
        "Furu Wei"
    ],
    "pdf_url": "https://aclanthology.org/2024.acl-long.229.pdf",
    "pdf_path": "data/dataset/airqa/papers/acl2024/883cb64f-3c5b-53e2-b2f6-3bad83ffa860.pdf",
    "abstract": "Large Language Models (LLMs) show strong instruction understanding ability across multiple languages. However, they are easily biased towards English in instruction tuning, and generate English responses even given non-English instructions. In this paper, we investigate the language inconsistent generation problem in monolingual instruction tuning. We find that instruction tuning in English increases the modelsâ€™ preference for English responses. It attaches higher probabilities to English responses than to responses in the same language as the instruction. Based on the findings, we alleviate the language inconsistent generation problem by counteracting the model preference for English responses in both the training and inference stages. Specifically, we propose Pseudo-Inconsistent Penalization (PIP) which prevents the model from generating English responses when given non-English language prompts during training, and Prior Enhanced Decoding (PED) which improves the language-consistent prior by leveraging the untuned base language model. Experimental results show that our two methods significantly improve the language consistency of the model without requiring any multilingual data. Our code, data, and models will be released.",
    "num_pages": 16
}