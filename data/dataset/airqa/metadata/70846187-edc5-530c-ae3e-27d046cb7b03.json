{
    "uuid": "70846187-edc5-530c-ae3e-27d046cb7b03",
    "title": "LOGIC-LM++: Multi-Step Refinement for Symbolic Formulations",
    "conference_full": "Annual Meeting of the Association for Computational Linguistics",
    "conference": "ACL",
    "year": 2024,
    "volume": "Proceedings of the 2nd Workshop on Natural Language Reasoning and Structured Explanations (@ACL 2024)",
    "bibtex": "@inproceedings{kirtania-etal-2024-logic,\n    title = \"{LOGIC}-{LM}++: Multi-Step Refinement for Symbolic Formulations\",\n    author = \"Kirtania, Shashank  and\n      Gupta, Priyanshu  and\n      Radhakrishna, Arjun\",\n    editor = \"Dalvi Mishra, Bhavana  and\n      Durrett, Greg  and\n      Jansen, Peter  and\n      Lipkin, Ben  and\n      Neves Ribeiro, Danilo  and\n      Wong, Lionel  and\n      Ye, Xi  and\n      Zhao, Wenting\",\n    booktitle = \"Proceedings of the 2nd Workshop on Natural Language Reasoning and Structured Explanations (@ACL 2024)\",\n    month = aug,\n    year = \"2024\",\n    address = \"Bangkok, Thailand\",\n    publisher = \"Association for Computational Linguistics\",\n    url = \"https://aclanthology.org/2024.nlrse-1.6\",\n    pages = \"56--63\",\n    abstract = \"In this paper we examine the limitations of Large Language Models (LLMs) for complex reasoning tasks. While current approaches leverage formal languages as intermediate representation for these reasoning problems, they still struggle with generating intermediate for-mal specifications with great correctness and in refining these representations. To address these issues, this paper proposes Logic-LM++, an improvement on Logic-LM (Pan et al., 2023). It uses the ability of LLMs to do pairwise comparisons, allowing the evaluation of the refinements suggested by the LLM. The paper demonstrates that Logic-LM++ outperforms Logic-LM and LLM based techniques on natural language reasoning tasks on two datasets, FOLIO, ProofWriter and AR-LSAT. Logic-LM++ show an average improvement of 18.5{\\%} on standard prompting, 12.3{\\%} on chain of thought prompting and 5{\\%} on Logic-LM.\",\n}\n",
    "authors": [
        "Shashank Kirtania",
        "Priyanshu Gupta",
        "Arjun Radhakrishna"
    ],
    "pdf_url": "https://aclanthology.org/2024.nlrse-1.6.pdf",
    "pdf_path": "data/dataset/airqa/papers/acl2024/70846187-edc5-530c-ae3e-27d046cb7b03.pdf",
    "abstract": "In this paper we examine the limitations of Large Language Models (LLMs) for complex reasoning tasks. While current approaches leverage formal languages as intermediate representation for these reasoning problems, they still struggle with generating intermediate for-mal specifications with great correctness and in refining these representations. To address these issues, this paper proposes Logic-LM++, an improvement on Logic-LM (Pan et al., 2023). It uses the ability of LLMs to do pairwise comparisons, allowing the evaluation of the refinements suggested by the LLM. The paper demonstrates that Logic-LM++ outperforms Logic-LM and LLM based techniques on natural language reasoning tasks on two datasets, FOLIO, ProofWriter and AR-LSAT. Logic-LM++ show an average improvement of 18.5% on standard prompting, 12.3% on chain of thought prompting and 5% on Logic-LM.",
    "num_pages": 8
}