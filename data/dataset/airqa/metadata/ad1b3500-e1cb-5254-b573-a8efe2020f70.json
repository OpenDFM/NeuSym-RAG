{
    "uuid": "ad1b3500-e1cb-5254-b573-a8efe2020f70",
    "title": "Parameter-Efficient Detoxification with Contrastive Decoding",
    "conference_full": "Annual Meeting of the Association for Computational Linguistics",
    "conference": "ACL",
    "year": 2024,
    "volume": "Proceedings of the 1st Human-Centered Large Language Modeling Workshop",
    "bibtex": "@inproceedings{niu-etal-2024-parameter,\n    title = \"Parameter-Efficient Detoxification with Contrastive Decoding\",\n    author = \"Niu, Tong  and\n      Xiong, Caiming  and\n      Zhou, Yingbo  and\n      Yavuz, Semih\",\n    editor = \"Soni, Nikita  and\n      Flek, Lucie  and\n      Sharma, Ashish  and\n      Yang, Diyi  and\n      Hooker, Sara  and\n      Schwartz, H. Andrew\",\n    booktitle = \"Proceedings of the 1st Human-Centered Large Language Modeling Workshop\",\n    month = aug,\n    year = \"2024\",\n    address = \"TBD\",\n    publisher = \"ACL\",\n    url = \"https://aclanthology.org/2024.hucllm-1.3\",\n    doi = \"10.18653/v1/2024.hucllm-1.3\",\n    pages = \"30--40\",\n    abstract = \"The field of natural language generation has witnessed significant advancements in recent years, including the development of controllable text generation techniques. However, controlling the attributes of the generated text remains a challenge, especially when aiming to avoid undesirable behavior such as toxicity. In this work, we introduce Detoxification Generator (DETOXIGEN), an inference-time algorithm that steers the generation away from unwanted styles. DETOXIGEN is an ensemble of a pre-trained language model (generator) and a detoxifier. The detoxifier is trained intentionally on the toxic data representative of the undesirable attribute, encouraging it to generate text in that style exclusively. During the actual generation, we use the trained detoxifier to produce undesirable tokens for the generator to contrast against at each decoding step. This approach directly informs the generator to avoid generating tokens that the detoxifier considers highly likely. We evaluate DETOXIGEN on the commonly used REALTOXICITYPROMPTS benchmark (Gehman et al., 2020) with various language models as generators. We find that it significantly outperforms previous approaches in detoxification metrics while not compromising on the generation quality. Moreover, the detoxifier is obtained by soft prompt-tuning using the same backbone language model as the generator. Hence, DETOXIGEN requires only a tiny amount of extra weights from the virtual tokens of the detoxifier to be loaded into GPU memory while decoding, making it a promising lightweight, practical, and parameter-efficient detoxification strategy.\",\n}\n",
    "authors": [
        "Tong Niu",
        "Caiming Xiong",
        "Yingbo Zhou",
        "Semih Yavuz"
    ],
    "pdf_url": "https://aclanthology.org/2024.hucllm-1.3.pdf",
    "pdf_path": "data/dataset/airqa/papers/acl2024/ad1b3500-e1cb-5254-b573-a8efe2020f70.pdf",
    "abstract": "The field of natural language generation has witnessed significant advancements in recent years, including the development of controllable text generation techniques. However, controlling the attributes of the generated text remains a challenge, especially when aiming to avoid undesirable behavior such as toxicity. In this work, we introduce Detoxification Generator (DETOXIGEN), an inference-time algorithm that steers the generation away from unwanted styles. DETOXIGEN is an ensemble of a pre-trained language model (generator) and a detoxifier. The detoxifier is trained intentionally on the toxic data representative of the undesirable attribute, encouraging it to generate text in that style exclusively. During the actual generation, we use the trained detoxifier to produce undesirable tokens for the generator to contrast against at each decoding step. This approach directly informs the generator to avoid generating tokens that the detoxifier considers highly likely. We evaluate DETOXIGEN on the commonly used REALTOXICITYPROMPTS benchmark (Gehman et al., 2020) with various language models as generators. We find that it significantly outperforms previous approaches in detoxification metrics while not compromising on the generation quality. Moreover, the detoxifier is obtained by soft prompt-tuning using the same backbone language model as the generator. Hence, DETOXIGEN requires only a tiny amount of extra weights from the virtual tokens of the detoxifier to be loaded into GPU memory while decoding, making it a promising lightweight, practical, and parameter-efficient detoxification strategy.",
    "num_pages": 11
}