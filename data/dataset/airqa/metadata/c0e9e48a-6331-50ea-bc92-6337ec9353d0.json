{
    "uuid": "c0e9e48a-6331-50ea-bc92-6337ec9353d0",
    "title": "Limitations of Language Models in Arithmetic and Symbolic Induction",
    "conference_full": "Annual Meeting of the Association for Computational Linguistics",
    "conference": "ACL",
    "year": 2023,
    "volume": "Proceedings of the 61st Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers)",
    "bibtex": "@inproceedings{qian-etal-2023-limitations,\n    title = \"Limitations of Language Models in Arithmetic and Symbolic Induction\",\n    author = \"Qian, Jing  and\n      Wang, Hong  and\n      Li, Zekun  and\n      Li, Shiyang  and\n      Yan, Xifeng\",\n    editor = \"Rogers, Anna  and\n      Boyd-Graber, Jordan  and\n      Okazaki, Naoaki\",\n    booktitle = \"Proceedings of the 61st Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers)\",\n    month = jul,\n    year = \"2023\",\n    address = \"Toronto, Canada\",\n    publisher = \"Association for Computational Linguistics\",\n    url = \"https://aclanthology.org/2023.acl-long.516\",\n    doi = \"10.18653/v1/2023.acl-long.516\",\n    pages = \"9285--9298\",\n    abstract = \"Recent work has shown that large pretrained Language Models (LMs) can not only perform remarkably well on a range of Natural Language Processing (NLP) tasks but also start improving on reasoning tasks such as arithmetic induction, symbolic manipulation, and commonsense reasoning with increasing size of models. However, it is still unclear what the underlying capabilities of these LMs are. Surprisingly, we find that these models have limitations on certain basic symbolic manipulation tasks such as copy, reverse, and addition. When the total number of symbols or repeating symbols increases, the model performance drops quickly. We investigate the potential causes behind this phenomenon and examine a set of possible methods, including explicit positional markers, fine-grained computation steps, and LMs with callable programs. Experimental results show that none of these techniques can solve the simplest addition induction problem completely. In the end, we introduce LMs with tutor, which demonstrates every single step of teaching. LMs with tutor is able to deliver 100{\\%} accuracy in situations of OOD and repeating symbols, shedding new insights on the boundary of large LMs in induction.\",\n}\n",
    "authors": [
        "Jing Qian",
        "Hong Wang",
        "Zekun Li",
        "Shiyang Li",
        "Xifeng Yan"
    ],
    "pdf_url": "https://aclanthology.org/2023.acl-long.516.pdf",
    "pdf_path": "data/dataset/airqa/papers/acl2023/c0e9e48a-6331-50ea-bc92-6337ec9353d0.pdf",
    "abstract": "Recent work has shown that large pretrained Language Models (LMs) can not only perform remarkably well on a range of Natural Language Processing (NLP) tasks but also start improving on reasoning tasks such as arithmetic induction, symbolic manipulation, and commonsense reasoning with increasing size of models. However, it is still unclear what the underlying capabilities of these LMs are. Surprisingly, we find that these models have limitations on certain basic symbolic manipulation tasks such as copy, reverse, and addition. When the total number of symbols or repeating symbols increases, the model performance drops quickly. We investigate the potential causes behind this phenomenon and examine a set of possible methods, including explicit positional markers, fine-grained computation steps, and LMs with callable programs. Experimental results show that none of these techniques can solve the simplest addition induction problem completely. In the end, we introduce LMs with tutor, which demonstrates every single step of teaching. LMs with tutor is able to deliver 100% accuracy in situations of OOD and repeating symbols, shedding new insights on the boundary of large LMs in induction.",
    "num_pages": 14
}