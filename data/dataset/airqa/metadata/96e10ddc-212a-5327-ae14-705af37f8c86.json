{
    "uuid": "96e10ddc-212a-5327-ae14-705af37f8c86",
    "title": "How Proficient Are Large Language Models in Formal Languages? An In-Depth Insight for Knowledge Base Question Answering",
    "conference_full": "Annual Meeting of the Association for Computational Linguistics",
    "conference": "ACL",
    "year": 2024,
    "volume": "Findings of the Association for Computational Linguistics: ACL 2024",
    "bibtex": "@inproceedings{liu-etal-2024-proficient,\n    title = \"How Proficient Are Large Language Models in Formal Languages? An In-Depth Insight for Knowledge Base Question Answering\",\n    author = \"Liu, Jinxin  and\n      Cao, Shulin  and\n      Shi, Jiaxin  and\n      Zhang, Tingjian  and\n      Nie, Lunyiu  and\n      Hu, Linmei  and\n      Hou, Lei  and\n      Li, Juanzi\",\n    editor = \"Ku, Lun-Wei  and\n      Martins, Andre  and\n      Srikumar, Vivek\",\n    booktitle = \"Findings of the Association for Computational Linguistics: ACL 2024\",\n    month = aug,\n    year = \"2024\",\n    address = \"Bangkok, Thailand\",\n    publisher = \"Association for Computational Linguistics\",\n    url = \"https://aclanthology.org/2024.findings-acl.45\",\n    doi = \"10.18653/v1/2024.findings-acl.45\",\n    pages = \"792--815\",\n    abstract = \"Knowledge Base Question Answering (KBQA) aims to answer natural language questions based on facts in knowledge bases. A typical approach to KBQA is semantic parsing, which translates a question into an executable logical form in a formal language. Recent works leverage the capabilities of large language models (LLMs) for logical form generation to improve performance. However, although it is validated that LLMs are capable of solving some KBQA problems, there has been little discussion on the differences in LLMs{'} proficiency in formal languages used in semantic parsing. In this work, we propose to evaluate the understanding and generation ability of LLMs to deal with differently structured logical forms by examining the inter-conversion of natural and formal language through in-context learning of LLMs. Extensive experiments with models of different sizes show that state-of-the-art LLMs can understand formal languages as well as humans, but generating correct logical forms given a few examples remains a challenge. Most importantly, our results also indicate that LLMs exhibit considerable sensitivity. In general, the formal language with a lower formalization level, i.e., the more similar it is to natural language, is more friendly to LLMs. Code and data can be found at https://github.com/Matthewlliu/structure{\\_}probe.\",\n}\n",
    "authors": [
        "Jinxin Liu",
        "Shulin Cao",
        "Jiaxin Shi",
        "Tingjian Zhang",
        "Lunyiu Nie",
        "Linmei Hu",
        "Lei Hou",
        "Juanzi Li"
    ],
    "pdf_url": "https://aclanthology.org/2024.findings-acl.45.pdf",
    "pdf_path": "data/dataset/airqa/papers/acl2024/96e10ddc-212a-5327-ae14-705af37f8c86.pdf",
    "abstract": "Knowledge Base Question Answering (KBQA) aims to answer natural language questions based on facts in knowledge bases. A typical approach to KBQA is semantic parsing, which translates a question into an executable logical form in a formal language. Recent works leverage the capabilities of large language models (LLMs) for logical form generation to improve performance. However, although it is validated that LLMs are capable of solving some KBQA problems, there has been little discussion on the differences in LLMsâ€™ proficiency in formal languages used in semantic parsing. In this work, we propose to evaluate the understanding and generation ability of LLMs to deal with differently structured logical forms by examining the inter-conversion of natural and formal language through in-context learning of LLMs. Extensive experiments with models of different sizes show that state-of-the-art LLMs can understand formal languages as well as humans, but generating correct logical forms given a few examples remains a challenge. Most importantly, our results also indicate that LLMs exhibit considerable sensitivity. In general, the formal language with a lower formalization level, i.e., the more similar it is to natural language, is more friendly to LLMs. Code and data can be found at https://github.com/Matthewlliu/structure_probe.",
    "num_pages": 24
}