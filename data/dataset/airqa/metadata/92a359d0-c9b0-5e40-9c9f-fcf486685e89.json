{
    "uuid": "92a359d0-c9b0-5e40-9c9f-fcf486685e89",
    "title": "MAPLE: Multilingual Evaluation of Parameter Efficient Finetuning of Large Language Models",
    "conference_full": "Annual Meeting of the Association for Computational Linguistics",
    "conference": "ACL",
    "year": 2024,
    "volume": "Findings of the Association for Computational Linguistics: ACL 2024",
    "bibtex": "@inproceedings{aggarwal-etal-2024-maple,\n    title = \"{MAPLE}: Multilingual Evaluation of Parameter Efficient Finetuning of Large Language Models\",\n    author = \"Aggarwal, Divyanshu  and\n      Sathe, Ashutosh  and\n      Watts, Ishaan  and\n      Sitaram, Sunayana\",\n    editor = \"Ku, Lun-Wei  and\n      Martins, Andre  and\n      Srikumar, Vivek\",\n    booktitle = \"Findings of the Association for Computational Linguistics: ACL 2024\",\n    month = aug,\n    year = \"2024\",\n    address = \"Bangkok, Thailand\",\n    publisher = \"Association for Computational Linguistics\",\n    url = \"https://aclanthology.org/2024.findings-acl.881\",\n    doi = \"10.18653/v1/2024.findings-acl.881\",\n    pages = \"14824--14867\",\n    abstract = \"Parameter efficient finetuning has emerged as a viable solution for improving the performance of Large Language Models without requiring massive resources and compute. Prior work on multilingual evaluation has shown that there is a large gap between the performance of LLMs on English and other languages. Further, there is also a large gap between the performance of smaller open-source models and larger LLMs. Finetuning can be an effective way to bridge this gap and make language models more equitable. In this work, we finetune the Llama-2 and Mistral models on two synthetic multilingual instruction tuning datasets to determine its effect on model performance on six downstream tasks covering forty one languages in all. Additionally, we experiment with various parameters, such as rank for low-rank adaptation and values of quantisation to determine their effects on downstream performance and find that higher rank and higher quantisation values benefit low-resource languages. We find that parameter efficient finetuning of smaller open-source models sometimes bridges the gap between the performance of these models and the larger ones, however, English performance can take a hit. We also find that finetuning sometimes improves performance on low-resource languages, while degrading performance on high-resource languages.\",\n}\n",
    "authors": [
        "Divyanshu Aggarwal",
        "Ashutosh Sathe",
        "Ishaan Watts",
        "Sunayana Sitaram"
    ],
    "pdf_url": "https://aclanthology.org/2024.findings-acl.881.pdf",
    "pdf_path": "data/dataset/airqa/papers/acl2024/92a359d0-c9b0-5e40-9c9f-fcf486685e89.pdf",
    "abstract": "Parameter efficient finetuning has emerged as a viable solution for improving the performance of Large Language Models without requiring massive resources and compute. Prior work on multilingual evaluation has shown that there is a large gap between the performance of LLMs on English and other languages. Further, there is also a large gap between the performance of smaller open-source models and larger LLMs. Finetuning can be an effective way to bridge this gap and make language models more equitable. In this work, we finetune the Llama-2 and Mistral models on two synthetic multilingual instruction tuning datasets to determine its effect on model performance on six downstream tasks covering forty one languages in all. Additionally, we experiment with various parameters, such as rank for low-rank adaptation and values of quantisation to determine their effects on downstream performance and find that higher rank and higher quantisation values benefit low-resource languages. We find that parameter efficient finetuning of smaller open-source models sometimes bridges the gap between the performance of these models and the larger ones, however, English performance can take a hit. We also find that finetuning sometimes improves performance on low-resource languages, while degrading performance on high-resource languages.",
    "num_pages": 44
}