{
    "uuid": "7786b615-2681-5912-900c-faa8e290590a",
    "title": "M-RAG: Reinforcing Large Language Model Performance through Retrieval-Augmented Generation with Multiple Partitions",
    "conference_full": "Annual Meeting of the Association for Computational Linguistics",
    "conference": "ACL",
    "year": 2024,
    "volume": "Proceedings of the 62nd Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers)",
    "bibtex": "@inproceedings{wang-etal-2024-rag,\n    title = \"{M}-{RAG}: Reinforcing Large Language Model Performance through Retrieval-Augmented Generation with Multiple Partitions\",\n    author = \"Wang, Zheng  and\n      Teo, Shu  and\n      Ouyang, Jieer  and\n      Xu, Yongjun  and\n      Shi, Wei\",\n    editor = \"Ku, Lun-Wei  and\n      Martins, Andre  and\n      Srikumar, Vivek\",\n    booktitle = \"Proceedings of the 62nd Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers)\",\n    month = aug,\n    year = \"2024\",\n    address = \"Bangkok, Thailand\",\n    publisher = \"Association for Computational Linguistics\",\n    url = \"https://aclanthology.org/2024.acl-long.108\",\n    doi = \"10.18653/v1/2024.acl-long.108\",\n    pages = \"1966--1978\",\n    abstract = \"Retrieval-Augmented Generation (RAG) enhances Large Language Models (LLMs) by retrieving relevant memories from an external database. However, existing RAG methods typically organize all memories in a whole database, potentially limiting focus on crucial memories and introducing noise. In this paper, we introduce a multiple partition paradigm for RAG (called M-RAG), where each database partition serves as a basic unit for RAG execution. Based on this paradigm, we propose a novel framework that leverages LLMs with Multi-Agent Reinforcement Learning to optimize different language generation tasks explicitly. Through comprehensive experiments conducted on seven datasets, spanning three language generation tasks and involving three distinct language model architectures, we confirm that M-RAG consistently outperforms various baseline methods, achieving improvements of 11{\\%}, 8{\\%}, and 12{\\%} for text summarization, machine translation, and dialogue generation, respectively.\",\n}\n",
    "authors": [
        "Zheng Wang",
        "Shu Teo",
        "Jieer Ouyang",
        "Yongjun Xu",
        "Wei Shi"
    ],
    "pdf_url": "https://aclanthology.org/2024.acl-long.108.pdf",
    "pdf_path": "data/dataset/airqa/papers/acl2024/7786b615-2681-5912-900c-faa8e290590a.pdf",
    "abstract": "Retrieval-Augmented Generation (RAG) enhances Large Language Models (LLMs) by retrieving relevant memories from an external database. However, existing RAG methods typically organize all memories in a whole database, potentially limiting focus on crucial memories and introducing noise. In this paper, we introduce a multiple partition paradigm for RAG (called M-RAG), where each database partition serves as a basic unit for RAG execution. Based on this paradigm, we propose a novel framework that leverages LLMs with Multi-Agent Reinforcement Learning to optimize different language generation tasks explicitly. Through comprehensive experiments conducted on seven datasets, spanning three language generation tasks and involving three distinct language model architectures, we confirm that M-RAG consistently outperforms various baseline methods, achieving improvements of 11%, 8%, and 12% for text summarization, machine translation, and dialogue generation, respectively.",
    "num_pages": 13
}