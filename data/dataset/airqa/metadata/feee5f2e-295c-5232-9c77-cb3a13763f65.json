{
    "uuid": "feee5f2e-295c-5232-9c77-cb3a13763f65",
    "title": "Soft Self-Consistency Improves Language Models Agents",
    "conference_full": "Annual Meeting of the Association for Computational Linguistics",
    "conference": "ACL",
    "year": 2024,
    "volume": "Proceedings of the 62nd Annual Meeting of the Association for Computational Linguistics (Volume 2: Short Papers)",
    "bibtex": "@inproceedings{wang-etal-2024-soft,\n    title = \"Soft Self-Consistency Improves Language Models Agents\",\n    author = \"Wang, Han  and\n      Prasad, Archiki  and\n      Stengel-Eskin, Elias  and\n      Bansal, Mohit\",\n    editor = \"Ku, Lun-Wei  and\n      Martins, Andre  and\n      Srikumar, Vivek\",\n    booktitle = \"Proceedings of the 62nd Annual Meeting of the Association for Computational Linguistics (Volume 2: Short Papers)\",\n    month = aug,\n    year = \"2024\",\n    address = \"Bangkok, Thailand\",\n    publisher = \"Association for Computational Linguistics\",\n    url = \"https://aclanthology.org/2024.acl-short.28\",\n    doi = \"10.18653/v1/2024.acl-short.28\",\n    pages = \"287--301\",\n    abstract = \"Generations from large language models (LLMs) can be improved by sampling and scoring multiple solutions to select a final answer. Current {``}sample and select{''} methods such as self-consistency (SC) rely on majority voting to score answers. However, when tasks have many distinct and valid answers, selection by voting requires a large number of samples. This makes SC prohibitively expensive for interactive tasks that involve generating multiple actions (answers) sequentially. After establishing that majority voting fails to provide consistent gains on such tasks, we demonstrate how to increase success rates by softening the scoring criterion. We introduce Soft Self-Consistency (SOFT-SC), which replaces SC{'}s discontinuous scoring with a continuous score computed from model likelihoods, allowing for selection even when actions are sparsely distributed. SOFT-SC improves both performance and efficiency on long-horizon interactive tasks, requiring half as many samples as SC for comparable or better performance. For a fixed number of samples, SOFT-SC leads to a 1.3{\\%} increase over SC in absolute success rate on writing bash programs, a 6.6{\\%} increase on online shopping (WebShop), and a 4.7{\\%} increase for an interactive household game (ALFWorld). Finally, we show that SOFT-SC can be applied to both open-source and black-box models.\",\n}\n",
    "authors": [
        "Han Wang",
        "Archiki Prasad",
        "Elias Stengel-Eskin",
        "Mohit Bansal"
    ],
    "pdf_url": "https://aclanthology.org/2024.acl-short.28.pdf",
    "pdf_path": "data/dataset/airqa/papers/acl2024/feee5f2e-295c-5232-9c77-cb3a13763f65.pdf",
    "abstract": "Generations from large language models (LLMs) can be improved by sampling and scoring multiple solutions to select a final answer. Current “sample and select” methods such as self-consistency (SC) rely on majority voting to score answers. However, when tasks have many distinct and valid answers, selection by voting requires a large number of samples. This makes SC prohibitively expensive for interactive tasks that involve generating multiple actions (answers) sequentially. After establishing that majority voting fails to provide consistent gains on such tasks, we demonstrate how to increase success rates by softening the scoring criterion. We introduce Soft Self-Consistency (SOFT-SC), which replaces SC’s discontinuous scoring with a continuous score computed from model likelihoods, allowing for selection even when actions are sparsely distributed. SOFT-SC improves both performance and efficiency on long-horizon interactive tasks, requiring half as many samples as SC for comparable or better performance. For a fixed number of samples, SOFT-SC leads to a 1.3% increase over SC in absolute success rate on writing bash programs, a 6.6% increase on online shopping (WebShop), and a 4.7% increase for an interactive household game (ALFWorld). Finally, we show that SOFT-SC can be applied to both open-source and black-box models.",
    "num_pages": 15
}